spring:
  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    type: com.mysql.cj.jdbc.MysqlConnectionPoolDataSource
  jpa:
    open-in-view: false
    defer-datasource-initialization: true
    hibernate.ddl-auto: update
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.default_batch_fetch_size: 100
  data:
    redis:
      host: localhost
      port: 6379
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${USER_EMAIL}
    password: ${APP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    auth-code-expiration-millis: 1800000 # 30 * 60 * 1000 = 30ë¶„
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB

cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME}
    stack.auto: false
    region.static: ap-northeast-2
    credentials:
      access-key: ${AWS_USER_ACCESS_KEY}
      secret-key: ${AWS_USER_SECRET_KEY}

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    deepLinking: true

jwt.access.secret-key: ${JWT_ACCESS_SECRET_KEY}
jwt.refresh.secret-key: ${JWT_REFRESH_SECRET_KEY}

member:
  test:
    nickname: ${TEST_NICKNAME}
    email: ${TEST_EMAIL}
    raw-password: ${TEST_RAW_PASSWORD}
  admin:
    nickname: ${ADMIN_NICKNAME}
    email: ${ADMIN_EMAIL}
    raw-password: ${ADMIN_RAW_PASSWORD}

---

spring:
  config.activate.on-profile: test
  datasource.url: jdbc:h2:mem:testdb